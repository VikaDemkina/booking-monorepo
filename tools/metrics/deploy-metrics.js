#!/usr/bin/env node

const fs = require('fs-extra');
const path = require('path');
const { execSync } = require('child_process');

// –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –º–µ—Ç—Ä–∏–∫, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
const METRICS_DIR = path.join(process.cwd(), 'metrics-data');
fs.ensureDirSync(METRICS_DIR);

const DEPLOY_METRICS_FILE = path.join(METRICS_DIR, 'deploy-metrics.json');

// –ü–æ–ª—É—á–∞–µ–º —Ö–µ—à –∫–æ–º–º–∏—Ç–∞ –∏ –≤—Ä–µ–º—è –∫–æ–º–º–∏—Ç–∞
console.log('üîÑ –ù–∞—á–∞–ª–æ —Å–±–æ—Ä–∞ –º–µ—Ç—Ä–∏–∫ –¥–µ–ø–ª–æ—è...');
let commitHash, commitTime;

try {
  // –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å —Ö–µ—à –∫–æ–º–º–∏—Ç–∞
  try {
    commitHash = process.env.GITHUB_SHA || execSync('git rev-parse HEAD').toString().trim();
    console.log(`–•–µ—à –∫–æ–º–º–∏—Ç–∞: ${commitHash}`);
  } catch (error) {
    console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ö–µ—à –∫–æ–º–º–∏—Ç–∞:', error.message);
    commitHash = 'unknown';
  }
  
  // –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –≤—Ä–µ–º—è –∫–æ–º–º–∏—Ç–∞
  try {
    if (commitHash !== 'unknown') {
      const commitTimeStr = execSync(`git show -s --format=%ct ${commitHash}`).toString().trim();
      commitTime = parseInt(commitTimeStr) * 1000; // –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –∏–∑ —Å–µ–∫—É–Ω–¥ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã
      console.log(`–í—Ä–µ–º—è –∫–æ–º–º–∏—Ç–∞: ${new Date(commitTime).toISOString()}`);
    } else {
      console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤—Ä–µ–º—è –∫–æ–º–º–∏—Ç–∞ –∏–∑-–∑–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ —Ö–µ—à–∞');
      commitTime = Date.now() - 60000; // –£—Å–ª–æ–≤–Ω–æ–µ –≤—Ä–µ–º—è –∫–æ–º–º–∏—Ç–∞ (1 –º–∏–Ω—É—Ç—É –Ω–∞–∑–∞–¥)
    }
  } catch (error) {
    console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤—Ä–µ–º—è –∫–æ–º–º–∏—Ç–∞:', error.message);
    commitTime = Date.now() - 60000; // –£—Å–ª–æ–≤–Ω–æ–µ –≤—Ä–µ–º—è –∫–æ–º–º–∏—Ç–∞ (1 –º–∏–Ω—É—Ç—É –Ω–∞–∑–∞–¥)
  }
  
  // –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è - —ç—Ç–æ –≤—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–µ–ø–ª–æ—è
  const deployFinishTime = Date.now();
  const commitToDeployTime = deployFinishTime - commitTime;
  
  console.log(`–í—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–µ–ø–ª–æ—è: ${new Date(deployFinishTime).toISOString()}`);
  console.log(`–í—Ä–µ–º—è –æ—Ç –∫–æ–º–º–∏—Ç–∞ –¥–æ –¥–µ–ø–ª–æ—è: ${commitToDeployTime / 1000} —Å–µ–∫—É–Ω–¥`);
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –º–µ—Ç—Ä–∏–∫–∏
  const metrics = {
    commitHash,
    commitTime,
    deployFinishTime,
    commitToDeployTime,
    timestamp: new Date().toISOString(),
  };
  
  // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –º–µ—Ç—Ä–∏–∫–∏, –µ—Å–ª–∏ –æ–Ω–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
  let allMetrics = [];
  if (fs.existsSync(DEPLOY_METRICS_FILE)) {
    try {
      allMetrics = JSON.parse(fs.readFileSync(DEPLOY_METRICS_FILE, 'utf8'));
      if (!Array.isArray(allMetrics)) {
        console.warn('–§–∞–π–ª –º–µ—Ç—Ä–∏–∫ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–æ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤.');
        allMetrics = [];
      }
    } catch (error) {
      console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –º–µ—Ç—Ä–∏–∫–∏ –¥–µ–ø–ª–æ—è:', error.message);
    }
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏
  allMetrics.push(metrics);
  
  try {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
    fs.writeFileSync(DEPLOY_METRICS_FILE, JSON.stringify(allMetrics, null, 2));
    console.log(`üìä –ú–µ—Ç—Ä–∏–∫–∏ –¥–µ–ø–ª–æ—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ ${DEPLOY_METRICS_FILE}`);
    
    // –î–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏ –≤—ã–≤–æ–¥–∏–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ –º–µ—Ç—Ä–∏–∫
    console.log('–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ –º–µ—Ç—Ä–∏–∫ –¥–µ–ø–ª–æ—è:');
    if (fs.existsSync(DEPLOY_METRICS_FILE)) {
      console.log(fs.readFileSync(DEPLOY_METRICS_FILE, 'utf8'));
    } else {
      console.log('–§–∞–π–ª –º–µ—Ç—Ä–∏–∫ –¥–µ–ø–ª–æ—è –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ –∑–∞–ø–∏—Å–∏!');
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –º–µ—Ç—Ä–∏–∫ –¥–µ–ø–ª–æ—è:', error);
  }
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–µ –º–µ—Ç—Ä–∏–∫ –¥–µ–ø–ª–æ—è:', error);
}